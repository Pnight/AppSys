<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.appsys.dao.appinfo.AppInfoMapper">
	<!-- int getAppInfoCount(QueryAppInfoVO queryAppInfoVO); -->
	<select id="getAppInfoCount" resultType="_int" parameterType="QueryAppInfoVO">
		select count(1) from app_info
			<where>
					<if test="querySoftwareName != null and querySoftwareName !='' ">
						and softwareName like CONCAT('%',#{querySoftwareName},'%')
					</if>
					<if test="queryStatus != null">
						and status = #{queryStatus}
					</if>
					<if test="queryFlatformId != null">
						and flatFormId = #{queryFlatformId}
					</if>
					<if test="queryCategoryLevel1 != null">
						and categoryLevel1 = #{queryCategoryLevel1}
					</if>
					<if test="queryCategoryLevel2 != null">
						and categoryLevel2 = #{queryCategoryLevel2}
					</if>
					<if test="queryCategoryLevel3 != null">
						and categoryLevel3 = #{queryCategoryLevel3}
					</if>
				</where>
	</select>
	
	<!-- List<AppInfo> getAppInfoList(QueryAppInfoVO queryAppInfoVO); -->						
	<select id="getAppInfoList" resultType="AppInfo" parameterType="QueryAppInfoVO">
		select 
			i.id,i.softwareName,i.APKName,i.supportROM,i.interfaceLanguage,i.softwareSize,
			i.updateDate,i.devId,i.appInfo,i.onSaleDate,i.offSaleDate,i.downloads,i.createdBy,i.creationDate,
			i.modifyBy,i.modifyDate,i.logoPicPath,logoLocPath,
			i.status,(select d.valueName from data_dictionary d where d.valueId = i.status and d.typeCode = 'APP_STATUS') as statusName,
			i.flatformId,(select d.valueName from data_dictionary d where d.valueId = i.flatformId and d.typeCode = 'APP_FLATFORM') as flatformName,
			i.versionId,(select v.versionNo from app_version v where v.id = i.versionId) as versionNo,
			i.categoryLevel1,(select c.categoryName from app_category c where c.id = i.categoryLevel1) as categoryLevel1Name,
			i.categoryLevel2,(select c.categoryName from app_category c where c.id = i.categoryLevel2) as categoryLevel2Name,
			i.categoryLevel3,(select c.categoryName from app_category c where c.id = i.categoryLevel3) as categoryLevel3Name
				from app_info i
					<where>
						<if test="querySoftwareName != null and querySoftwareName !='' ">
							and softwareName like CONCAT('%',#{querySoftwareName},'%')
						</if>
						<if test="queryStatus != null">
							and status = #{queryStatus}
						</if>
						<if test="queryFlatformId != null">
							and flatFormId = #{queryFlatformId}
						</if>
						<if test="queryCategoryLevel1 != null">
							and categoryLevel1 = #{queryCategoryLevel1}
						</if>
						<if test="queryCategoryLevel2 != null">
							and categoryLevel2 = #{queryCategoryLevel2}
						</if>
						<if test="queryCategoryLevel3 != null">
							and categoryLevel3 = #{queryCategoryLevel3}
						</if>
					</where>
					order by i.creationDate DESC,i.modifyDate DESC
						limit #{startIndex},#{pageSize}
	
	</select>
	
	
	<!-- List<AppInfo> checkInfoVerList(@Param("appinfoid")Integer appinfoid); -->
	<select id="checkInfoVerList" resultType="AppInfo">
		select * from app_info
			where id=#{appinfoid}
		<!-- select i.*,v.publishStatus,d1.valueName as flatformName,d2.valueName as statusName
			from  app_info i,data_dictionary d1,data_dictionary d2,app_version v
					where i.id=#{appinfoid}
					and v.appId=i.versionId
					and d1.typeCode="APP_FLATFORM" d1.valueId=v.publishStatus
					and d2.typeCode="APP_STATUS"  -->
	</select>
	
	
	<!-- int delAppInfo(@Param("appinfoid")Integer appinfoid); -->
	<delete id="delAppInfo" >
		delete from	app_info 
			
					where id=#{appinfoid}
	</delete>
	
</mapper>